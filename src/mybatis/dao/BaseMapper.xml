<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatis.dao.BaseMapper">
	<select id="scoreGroup" parameterType="java.util.Map"
		resultType="java.util.Map">
		select (case
		when score >0 AND score&lt;= 0.4 THEN 40
		when score >0.4
		AND score&lt;= 0.6 THEN 60
		when score >0.6 AND score&lt;= 0.8 THEN 80
		when score >0.8 AND score&lt;= 1 THEN 100
		else -1
		end) score,
		count(1)
		count from way_robot_question_answer_log
		where 1=1
		<if test="subsystemId != null" >
        	AND subsystem_id = #{subsystemId,jdbcType=VARCHAR},
      	</if>
		<if test="beginTime != null">
			AND create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			AND create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
		group by
		(case
		when score >0 AND score&lt;= 0.4 THEN 40
		when score >0.4
		AND score&lt;=
		0.6 THEN 60
		when score >0.6 AND score&lt;= 0.8 THEN 80
		when score >0.8
		AND score&lt;= 1 THEN 100
		else -1
		end)
		order by score
		desc;
	</select>

	<select id="typeScoreGroupAvg" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT CAST(T.gkb_type AS char) type, T.date time, avg(T.score) score from
		(
		SELECT
		date_format(create_time, '%y-%m-%d') date,
		score,
		gkb_type,
		subsystem_id
		FROM
		way_robot_question_answer_log
		where 1=1
		<if test="subsystemId != null" >
        	AND subsystem_id = #{subsystemId,jdbcType=VARCHAR},
      	</if>
		<if test="beginTime != null">
			AND create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			AND create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
		) T GROUP BY T.gkb_type, T.date
	</select>

	<!-- 作用机器人 -->
	<resultMap type="java.lang.String" id="robotIds"> 
      <result column="robot_id" property="robotId" /> 
    </resultMap> 
	
	<resultMap id="ResultMap" type="java.util.Map">
		<result column="subsystem_id" property="subsystemId" jdbcType="VARCHAR" />
		<result column="use_id" property="useId" jdbcType="VARCHAR" />
		<collection property="robotIds" javaType="java.util.List"
			ofType="java.lang.String">
			<result column="robot_id" property="robotId" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<select id="findActionScope" parameterType="java.util.Map"
		resultMap="ResultMap">
		SELECT DISTINCT T.subsystem_id, T.use_id, T.robot_id from
		(SELECT T1.subsystem_id, T1.use_id, T1.scope_id robot_id
		FROM way_robot_action_scope T1 
		JOIN way_robot_manage TR ON TR.robot_id = T1.scope_id
		WHERE T1.scope_type = 1 AND TR.is_deleted = 0
		UNION ALL
		SELECT T2.subsystem_id, T2.use_id, TR.robot_id
		FROM way_robot_action_scope T2
		JOIN way_robot_manage TR ON TR.robot_type_id = T2.scope_id
		WHERE T2.scope_type = 2 AND TR.is_deleted = 0
		UNION ALL
		SELECT T3.subsystem_id, T3.use_id, TR.robot_id
		FROM way_robot_action_scope T3
		JOIN way_robot_manage TR ON TR.install_site_id = T3.scope_id
		WHERE T3.scope_type = 3 AND TR.is_deleted = 0) T WHERE 1=1
		<if test="subsystemId != null">
			AND subsystem_id = #{subsystemId,jdbcType=VARCHAR}
		</if>
		ORDER BY T.subsystem_id, T.use_id
	</select>

</mapper>